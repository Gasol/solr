#! /bin/sh /usr/share/dpatch/dpatch-run
## 20_remove-dependency-on-javanet-staxutils-SOLR-851.dpatch by Jan-Pascal van Best <janpascal@vanbest.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Remove dependency on javanet staxutils.
## DP: See upstream issue SOLR-851

@DPATCH@
diff -urNad solr~/src/java/org/apache/solr/handler/AnalysisRequestHandler.java solr/src/java/org/apache/solr/handler/AnalysisRequestHandler.java
--- solr~/src/java/org/apache/solr/handler/AnalysisRequestHandler.java	2008-08-29 02:48:19.000000000 +0200
+++ solr/src/java/org/apache/solr/handler/AnalysisRequestHandler.java	2009-07-01 10:23:59.000000000 +0200
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-import javanet.staxutils.BaseXMLInputFactory;
+//import javanet.staxutils.BaseXMLInputFactory;
 import org.apache.commons.io.IOUtils;
 import org.apache.lucene.analysis.Analyzer;
 import org.apache.lucene.analysis.Token;
@@ -59,7 +59,8 @@
   public void init(NamedList args) {
     super.init(args);
 
-    inputFactory = BaseXMLInputFactory.newInstance();
+    // inputFactory = BaseXMLInputFactory.newInstance();
+    inputFactory = XMLInputFactory.newInstance();
     try {
       // The java 1.6 bundled stax parser (sjsxp) does not currently have a thread-safe
       // XMLInputFactory, as that implementation tries to cache and reuse the
diff -urNad solr~/src/java/org/apache/solr/handler/XmlUpdateRequestHandler.java solr/src/java/org/apache/solr/handler/XmlUpdateRequestHandler.java
--- solr~/src/java/org/apache/solr/handler/XmlUpdateRequestHandler.java	2008-08-29 02:48:19.000000000 +0200
+++ solr/src/java/org/apache/solr/handler/XmlUpdateRequestHandler.java	2009-07-01 10:23:59.000000000 +0200
@@ -24,7 +24,7 @@
 import java.util.HashMap;
 import java.util.logging.Logger;
 
-import javanet.staxutils.BaseXMLInputFactory;
+//import javanet.staxutils.BaseXMLInputFactory;
 
 import javax.xml.stream.FactoryConfigurationError;
 import javax.xml.stream.XMLInputFactory;
@@ -83,7 +83,7 @@
   {
     super.init(args);
     
-    inputFactory = BaseXMLInputFactory.newInstance();
+    inputFactory = XMLInputFactory.newInstance();
     try {
       // The java 1.6 bundled stax parser (sjsxp) does not currently have a thread-safe
       // XMLInputFactory, as that implementation tries to cache and reuse the
diff -urNad solr~/src/test/org/apache/solr/handler/AnalysisRequestHandlerTest.java solr/src/test/org/apache/solr/handler/AnalysisRequestHandlerTest.java
--- solr~/src/test/org/apache/solr/handler/AnalysisRequestHandlerTest.java	2008-08-27 15:04:20.000000000 +0200
+++ solr/src/test/org/apache/solr/handler/AnalysisRequestHandlerTest.java	2009-07-01 10:23:59.000000000 +0200
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-import javanet.staxutils.BaseXMLInputFactory;
+//import javanet.staxutils.BaseXMLInputFactory;
 import org.apache.lucene.analysis.Token;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.util.AbstractSolrTestCase;
@@ -27,7 +27,7 @@
 import java.util.List;
 
 public class AnalysisRequestHandlerTest extends AbstractSolrTestCase {
-  private XMLInputFactory inputFactory = BaseXMLInputFactory.newInstance();
+  private XMLInputFactory inputFactory = XMLInputFactory.newInstance();
 
   @Override
   public String getSchemaFile() {
@@ -102,4 +102,4 @@
       assertTrue(value + " is not equal to " + gold[j], value.equals(gold[j]) == true);
     }
   }
-}
\ No newline at end of file
+}
diff -urNad solr~/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.java solr/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.java
--- solr~/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.java	2008-08-27 15:04:20.000000000 +0200
+++ solr/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.java	2009-07-01 10:23:59.000000000 +0200
@@ -4,7 +4,7 @@
 import java.io.StringReader;
 import java.util.Collection;
 
-import javanet.staxutils.BaseXMLInputFactory;
+// import javanet.staxutils.BaseXMLInputFactory;
 
 import javax.xml.stream.XMLInputFactory;
 import javax.xml.stream.XMLStreamReader;
@@ -15,7 +15,7 @@
 
 public class XmlUpdateRequestHandlerTest extends AbstractSolrTestCase 
 {
-  private XMLInputFactory inputFactory = BaseXMLInputFactory.newInstance();
+  private XMLInputFactory inputFactory = XMLInputFactory.newInstance();
   protected XmlUpdateRequestHandler handler;
 
 @Override public String getSchemaFile() { return "schema.xml"; }
